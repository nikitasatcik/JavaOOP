package Project_1;

/**
 * 4. Шеф-повар. Определить иерархию овощей. Сделать салат. Посчитать калорийность.
 * Провести сортировку овощей для салата на основе одного из параметров.
 * Найти овощи в салате, соответствующие заданному диапазону калорийности.
 * ------------------------------------------------------------------------
 * 1. Использовать возможности ООП: классы, наследование, полиморфизм, инкапсуляция.
 * 2. Каждый класс должен иметь исчерпывающее смысл название и информативный состав.
 * 3. Наследование должно применяться только тогда, когда это имеет смысл.
 * 4. При кодировании должны быть использованы соглашения об оформлении кода java code convention.
 * 5. Классы должны быть грамотно разложены по пакетам.
 * 6. Работа с консолью или консольное меню должно быть минимальным.
 * 7. Для хранения параметров инициализации можно использовать файлы.
 */
public class Main {
    public static void main(String[] args) {
        Restaurant restaurant = new Restaurant();
        restaurant.createSalat();
    }
}










